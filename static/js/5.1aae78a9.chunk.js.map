{"version":3,"sources":["components/styled-componets/form-styles.js","components/styled-componets/error-message-styles.js","components/Form.js","components/styled-componets/recipeIngredients-styles.js","components/RecipeIngredients.js","components/styled-componets/recipe-card-styles.js","components/Recipe.js","components/styled-componets/recipes-styles.js","components/Recipes.js"],"names":["SearchForm","styled","form","fadeInDown","SearchInput","input","colors","darkBlue","white","IconBox","label","button","mantis","FaSearch","p","tomato","Form","useContext","RecipesContext","recipesInput","recipeQuery","recipeInput","setRecipeInput","setQuery","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","required","placeholder","color","Ingredients","div","mantisDarker","lighterBlue","Text","li","Weight","RecipeIngredients","ingredients","map","ingredient","text","weight","toFixed","uuidv4","RecipeCard","figure","RecipeTitle","h2","RecipeImg","img","RecipeURL","a","RecipeCardBtn","Recipe","recipeItem","recipe","image","url","useState","recipeDetails","setRecipeDetails","src","href","rel","onClick","RecipesSection","section","Title","h1","RecipeCardBody","Message","Spinner","Recipes","recipesState","recipes","recipeLoading","loading","size","margin","length"],"mappings":"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","file":"static/js/5.1aae78a9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./general-styles\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-width: 50rem;\r\n  margin: 0 auto 3rem;\r\n  animation: ${fadeInDown} 0.4s ease-in-out;\r\n  position: relative;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 1.4rem;\r\n  background-color: ${colors.darkBlue};\r\n  color: ${colors.white};\r\n  border: none;\r\n  border-top-left-radius: 1.2rem;\r\n  border-bottom-left-radius: 1.2rem;\r\n  &::placeholder {\r\n    color: ${colors.white};\r\n  }\r\n`;\r\n\r\nexport const SearchLabel = styled.label``;\r\n\r\nexport const IconBox = styled.button`\r\n  border: none;\r\n  padding: 1.35rem 1.6rem;\r\n  background-color: ${colors.mantis};\r\n  cursor: pointer;\r\n  border-top-right-radius: 1.2rem;\r\n  border-bottom-right-radius: 1.2rem;\r\n`;\r\n\r\nexport const SearchIcon = styled(FaSearch)`\r\n  color: red;\r\n  background-color: red;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"./general-styles\";\r\n\r\nexport const MessageError = styled.p`\r\n  position: absolute;\r\n  bottom: -4.3rem;\r\n  width: 100%;\r\n  padding: 1rem 1rem;\r\n  background-color: ${colors.tomato};\r\n  border-radius: 1.2rem;\r\n  min-height: 4.1rem;\r\n  color: ${colors.white};\r\n  text-align: center;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  IconBox,\r\n  SearchForm,\r\n  SearchInput,\r\n} from \"./styled-componets/form-styles\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { RecipesContext } from \"../RecipesContext\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nconst Form = () => {\r\n  // \"state\" of user's recipe input\r\n  const { recipesInput, recipeQuery } = useContext(RecipesContext);\r\n  const [recipeInput, setRecipeInput] = recipesInput;\r\n\r\n  //desctucture \"state\" which shows or hide error message\r\n  // const { error } = useContext(RecipesContext);\r\n  // const [errorMessage, setErrorMessage] = error;\r\n\r\n  const [query, setQuery] = recipeQuery; // recipe API query 'state'\r\n\r\n  const handleOnChange = (event) => {\r\n    setRecipeInput(event.target.value);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQuery(recipeInput);\r\n    setRecipeInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <SearchForm onSubmit={handleSubmit}>\r\n      <label htmlFor=\"search\"></label>\r\n      <SearchInput\r\n        type=\"text\"\r\n        id=\"search\"\r\n        value={recipeInput}\r\n        onChange={handleOnChange}\r\n        required\r\n        placeholder=\"Your Recipe...\"\r\n      />\r\n      <IconBox>\r\n        <FaSearch color=\"#fffff\" />\r\n      </IconBox>\r\n    </SearchForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./general-styles\";\r\n\r\nexport const Ingredients = styled.div`\r\n  padding: 1.2rem 1.2rem;\r\n  margin: 0 1.2rem 1.2rem;\r\n  border: 3px solid ${colors.mantisDarker};\r\n  border-radius: 1.2rem;\r\n  transition: all 0.3s ease-in-out;\r\n  animation: ${fadeInDown} 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: ${colors.lighterBlue};\r\n  }\r\n`;\r\n\r\nexport const Text = styled.li`\r\n  font-size: 1.7rem;\r\n  padding-bottom: 0.9rem;\r\n  margin-bottom: 0.8rem;\r\n  border-bottom: 1px solid ${colors.mantisDarker};\r\n`;\r\n\r\nexport const Weight = styled.li`\r\n  font-size: 1.5rem;\r\n  color: ${colors.mantis};\r\n`;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  Ingredients,\r\n  Text,\r\n  Weight,\r\n} from \"./styled-componets/recipeIngredients-styles\";\r\n\r\nconst RecipeIngredients = ({ ingredients }) => {\r\n  return ingredients.map((ingredient) => {\r\n    return (\r\n      <Ingredients>\r\n        <ul key={uuidv4()}>\r\n          <Text>{ingredient.text}</Text>\r\n          <Weight>Weight - {ingredient.weight.toFixed(2)}</Weight>\r\n        </ul>\r\n      </Ingredients>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RecipeIngredients;\r\n","import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./general-styles\";\r\n\r\nexport const RecipeCard = styled.figure`\r\n  flex: 0 1 100%;\r\n  max-width: 100%;\r\n  background-color: ${colors.darkBlue};\r\n  margin-bottom: 2rem;\r\n  max-width: 30rem;\r\n  color: ${colors.white};\r\n  border: 3px solid ${colors.mantis};\r\n  border-radius: 1.2rem;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: all 0.3s ease-in-out;\r\n  animation: ${fadeInDown} 0.4s ease-in-out;\r\n  cursor: pointer;\r\n  filter: drop-shadow(7px 8px 4px ${colors.darkBlue});\r\n\r\n  @media (min-width: 39rem) {\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const RecipeTitle = styled.h2`\r\n  position: absolute;\r\n  font-size: 1.8rem;\r\n  padding: 1.5rem 1.5rem 1.5rem 0.8rem;\r\n  background-color: ${colors.mantisDarker};\r\n  opacity: 0.8;\r\n  width: 100%;\r\n  border-top-left-radius: 1.2rem;\r\n  border-top-right-radius: 1.2rem;\r\n\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  @media (min-width: 48em) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const RecipeImg = styled.img`\r\n  max-width: 100%;\r\n  display: block;\r\n  height: auto;\r\n  border-top-left-radius: 1.2rem;\r\n  border-top-right-radius: 1.2rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const RecipeURL = styled.a`\r\n  display: inline-block;\r\n  padding-left: 1.5rem;\r\n  margin-bottom: 2rem;\r\n  cursor: pointer;\r\n  color: ${colors.mantisDarker};\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    color: ${colors.mantis};\r\n  }\r\n`;\r\n\r\nexport const RecipeCardBtn = styled.a`\r\n  display: inline-block;\r\n  font-size: 1.7rem;\r\n  font-family: \"Ranchers\", cursive;\r\n  letter-spacing: 0.2rem;\r\n  padding: 1.2rem;\r\n  background-color: ${colors.mantis};\r\n  width: 90%;\r\n  margin: 0 auto 2rem;\r\n  border-radius: 1.2rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.mantisDarker};\r\n  }\r\n`;\r\n","import React, {useState } from \"react\";\r\nimport RecipeIngredients from \"./RecipeIngredients\";\r\nimport {\r\n  RecipeCard,\r\n  RecipeCardBtn,\r\n  RecipeImg,\r\n  RecipeTitle,\r\n  RecipeURL,\r\n} from \"./styled-componets/recipe-card-styles\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  // destructure recieved recipe data and then individual recipe object\r\n  const { recipe: recipeItem } = recipe;\r\n  const { label, image, url, ingredients } = recipeItem;\r\n \r\n  //\"state\" of showing or hiding recipe ingredients on click\r\n  const [recipeDetails, setRecipeDetails] = useState(false);\r\n\r\n  return (\r\n    <RecipeCard>\r\n      <RecipeTitle>{label}</RecipeTitle>\r\n      <RecipeImg src={image} />\r\n      <RecipeURL href={url} target=\"_blank\" rel=\"noopener\">\r\n        URL\r\n      </RecipeURL>\r\n      <RecipeCardBtn onClick={() => setRecipeDetails(!recipeDetails)}>\r\n        Ingredients\r\n      </RecipeCardBtn>\r\n      {recipeDetails && <RecipeIngredients ingredients={ingredients} />}\r\n    </RecipeCard>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./general-styles\";\r\n\r\nexport const RecipesSection = styled.section`\r\n  background-color: ${colors.lighterBlue};\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-family: \"Ranchers\", cursive;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5rem;\r\n  margin-top: 10rem;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  animation: ${fadeInDown} 0.4s ease-in-out;\r\n\r\n  @media (min-width: 48em) {\r\n    font-size: 4rem;\r\n    margin-top: 13rem;\r\n  }\r\n\r\n  @media (min-width: 62em) {\r\n    margin-top: 15rem;\r\n  }\r\n`;\r\n\r\nexport const RecipeCardBody = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: self-start;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-size: 2rem;\r\n  font-family: \"Ranchers\", cursive;\r\n  text-align: center;\r\n  animation: ${fadeInDown} 0.4s ease-in-out;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 5rem;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { RecipesContext } from \"../RecipesContext\";\r\nimport Form from \"./Form\";\r\nimport Recipe from \"./Recipe\";\r\nimport { Container } from \"./styled-componets/general-styles\";\r\nimport {\r\n  Message,\r\n  RecipeCardBody,\r\n  RecipesSection,\r\n  Spinner,\r\n  Title,\r\n} from \"./styled-componets/recipes-styles\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport RotateLoader from \"react-spinners/RotateLoader\";\r\n\r\nconst Recipes = () => {\r\n  // 'state' of recived recipe data from a server\r\n  const { recipesState } = useContext(RecipesContext);\r\n  const [recipes, setRecipes] = recipesState;\r\n\r\n  // desctrucrure \"state\" of loading data from a server\r\n  const { recipeLoading } = useContext(RecipesContext);\r\n  const [loading, setLoading] = recipeLoading;\r\n\r\n   //desctucture \"state\" which shows or hide error message\r\n  // const { error } = useContext(RecipesContext);\r\n  // const [errorMessage, setErrorMessage] = error;\r\n  \r\n  return (\r\n    <RecipesSection>\r\n      <Container>\r\n        <Title>Search your favorite Recipe</Title>\r\n        <Form />\r\n        {loading ? (\r\n          <Spinner>\r\n            <RotateLoader\r\n              color=\"green\"\r\n              loading={loading}\r\n              size={20}\r\n              margin={4}\r\n            />\r\n          </Spinner>\r\n        ) : (\r\n          <RecipeCardBody>\r\n            {recipes.length > 0 ? (\r\n              recipes.map((recipe) => <Recipe key={uuidv4()} recipe={recipe} />)\r\n            ) : (\r\n              <Message>Find Your Recipe...</Message>\r\n            )}\r\n          </RecipeCardBody>\r\n        )}\r\n      </Container>\r\n    </RecipesSection>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n"],"sourceRoot":""}