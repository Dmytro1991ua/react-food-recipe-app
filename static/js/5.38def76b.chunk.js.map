{"version":3,"sources":["components/styled-componets/form-styles.js","components/Form.js","components/RecipeIngredients.js","components/Recipe.js","components/styled-componets/pagination-styles.js","components/Pagination.js","components/Recipes.js"],"names":["SearchForm","styled","form","fadeInDown","SearchInput","input","colors","darkBlue","white","IconBox","label","button","mantis","Form","useContext","RecipesContext","recipesInput","recipeQuery","recipeInput","setRecipeInput","setQuery","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","required","placeholder","RecipeIngredients","ingredients","map","ingredient","text","weight","toFixed","uuidv4","Recipe","recipe","recipeItem","image","url","favorites","localStorage","favoriteRecipe","setFavoriteRecipe","saveToLocalStorage","useState","recipeDetails","setRecipeDetails","btnText","setBtnText","btnColor","setBtnColor","src","alt","href","rel","onClick","newFavoriteList","handleAddFavoriteClick","color","fontSize","style","backgroundColor","PaginationBox","nav","Pagination","ul","PaginationItem","li","mantisDarker","lighterBlue","PaginationLink","a","PaginationBtn","Paginations","pagination","cardsLength","pageCurrent","recipesState","paginate","recipeCardsTotalPages","setCurrentPage","currentRecipeCard","currentBtn","setCurentBtn","pageNumbers","i","push","length","className","prev","number","Recipes","recipeLoading","loading","size","margin","FindRecipeMessage","title"],"mappings":"+MAIaA,EAAaC,IAAOC,KAAV,yMAMRC,KAIFC,EAAcH,IAAOI,MAAV,4OAGFC,IAAOC,SAClBD,IAAOE,MAKLF,IAAOE,OAMPC,GAFcR,IAAOS,MAAV,0BAEDT,IAAOU,OAAV,iMAGEL,IAAOM,S,eCWdC,EAlCF,WAAM,MAEqBC,qBAAWC,KAAzCC,EAFS,EAETA,aAAcC,EAFL,EAEKA,YAFL,cAGqBD,EAHrB,GAGVE,EAHU,KAGGC,EAHH,mBAKSF,EALT,GAKHG,GALG,WAgBjB,OACE,eAACpB,EAAD,CAAYqB,SAPO,SAACC,GACpBA,EAAMC,iBACNH,EAASF,GACTC,EAAe,KAIf,UACE,uBAAOK,QAAQ,WACf,cAACpB,EAAD,CACEqB,KAAK,OACLC,GAAG,SACHC,MAAOT,EACPU,SAhBiB,SAACN,GACtBH,EAAeG,EAAMO,OAAOF,QAgBxBG,UAAQ,EACRC,YAAY,mBAEd,cAACtB,EAAD,UACE,cAAC,IAAD,U,wBCfOuB,EAdW,SAAC,GAEzB,OAF6C,EAAlBC,YAERC,KAAI,SAACC,GACtB,OACE,cAAC,IAAD,UACE,+BACE,cAAC,IAAD,UAAOA,EAAWC,OAClB,eAAC,IAAD,uBAAkBD,EAAWE,OAAOC,QAAQ,UAH9BC,mB,QC6DTC,EA3DA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEAC,EAAeD,EAAvBA,OACA/B,EAAmCgC,EAAnChC,MAAOiC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,IAAKX,EAAgBS,EAAhBT,YAHE,EAKOnB,qBAAWC,KAAvC8B,EALqB,EAKrBA,UAAWC,EALU,EAKVA,aALU,cAMeD,EANf,GAMtBE,EANsB,KAMNC,EANM,KAOtBC,EAPsB,YAOAH,EAPA,QAUaI,oBAAS,GAVtB,mBAUtBC,EAVsB,KAUPC,EAVO,OAWCF,oBAAS,GAXV,mBAWtBG,EAXsB,KAWbC,EAXa,OAYGJ,oBAAS,GAZZ,mBAYtBK,EAZsB,KAYZC,EAZY,KA4B7B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAc9C,IACd,cAAC,IAAD,CAAW+C,IAAKd,EAAOe,IAAKhD,IAC5B,eAAC,IAAD,WACE,cAAC,IAAD,CAAWiD,KAAMf,EAAKf,OAAO,SAAS+B,IAAI,WAA1C,iBAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,QAAS,kBAhBY,SAACpB,GAC9B,IAAMqB,EAAe,sBAAOf,GAAP,CAAuBN,IAC5CO,EAAkBc,GAClBb,EAAmBa,GAaIC,CAAuBtB,IACtCuB,MAAM,UACNC,SAAS,gBAIf,cAAC,IAAD,CACEC,MACEX,EACI,CAAEY,gBAAiB,WACnB,CAAEA,gBAAiB,WAEzBN,QAnCc,WAClBT,GAAkBD,GAClBG,GAAYD,GACZG,GAAaD,IA0BX,SAQGF,EAAU,gBAAkB,gBAE9BF,GAAiB,cAAC,EAAD,CAAmBlB,YAAaA,Q,yBCjE3CmC,EAAgBnE,IAAOoE,IAAV,0HAObC,EAAarE,IAAOsE,GAAV,8CAIVC,EAAiBvE,IAAOwE,GAAV,0WAELnE,IAAOC,SACPD,IAAOM,OAOLN,IAAOoE,aAQPpE,IAAOqE,aAQlBC,GAJuB3E,YAAOuE,EAAPvE,CAAH,qDACXK,IAAOoE,cAGCzE,IAAO4E,EAAV,+HAEhBvE,IAAOE,QAKLsE,EAAgB7E,YAAOuE,EAAPvE,CAAH,0CACfK,IAAOE,OC8BHuE,EApEK,WAalB,IAbyB,IAAD,EACuCjE,qBAC7DC,KADMiE,EADgB,EAChBA,WAAYC,EADI,EACJA,YAAaC,EADT,EACSA,YAAaC,EADtB,EACsBA,aAGvCC,EAJiB,YAILJ,EAJK,MAKjBK,EALiB,YAKQJ,EALR,oBAMUC,EANV,GAMRI,GANQ,yBAOgBH,EAPhB,GAOjBI,EAPiB,aAUWrC,mBAAS,IAVpB,mBAUjBsC,EAViB,KAULC,EAVK,KAYpBC,EAAc,GACTC,EAAI,EAAGA,GAAKN,EAAuBM,IAC1CD,EAAYE,KAAKD,GAGnB,OACE,cAACvB,EAAD,UACE,eAACE,EAAD,WAEGiB,EAAkBM,OAAS,EAC1B,cAACf,EAAD,CACEgB,UAA0B,IAAfN,EAAmB,WAAa,GAC3C3B,QAAS,WACP4B,GAAa,SAACM,GAAD,OAAoB,IAATA,EAAaA,EAAOA,EAAO,KACnDT,EAAeE,IAJnB,eAUA,GAEDE,EAAYxD,KAAI,SAAC8D,GAAD,OACf,cAACxB,EAAD,CAEEsB,UAAWN,IAAeQ,EAAS,SAAU,GAC7CnC,QAAS,WACPuB,EAASY,GACTP,EAAaO,IALjB,SAQE,cAACpB,EAAD,UAAiBoB,KAPZA,MAURT,EAAkBM,OAAS,EAC1B,cAACf,EAAD,CACEgB,UACEN,IAAeE,EAAYG,OAAS,WAAa,GAEnDhC,QAAS,WACP4B,GAAa,SAACM,GAAD,OACXA,IAASL,EAAYG,OAASE,EAAOA,EAAO,KAE9CT,EAAeE,IARnB,eAcA,S,QCdKS,UAzCC,WAAM,IAEZd,EAAiBrE,qBAAWC,KAA5BoE,aAFY,cAGoBA,EAHpB,GAGbI,EAHa,KAMZW,GANY,KAMMpF,qBAAWC,KAA7BmF,eANY,cAOUA,EAPV,GAObC,EAPa,UASpB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,0CACA,cAAC,EAAD,IACCA,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CACEnC,MAAM,QACNmC,QAASA,EACTC,KAAM,GACNC,OAAQ,MAIZ,cAAC,IAAD,UACGd,EAAkBM,OAAS,EAC1BN,EAAkBrD,KAAI,SAACO,GAAD,OACpB,cAAC,EAAD,CAAuBA,OAAQA,GAAlBF,kBAGf,cAAC+D,EAAA,EAAD,CAAmBC,MAAM,2BAI7BJ,GAAW,cAAC,EAAD,IAAiB","file":"static/js/5.38def76b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./general-styles\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  max-width: 50rem;\r\n  margin: 0 auto 3rem;\r\n  animation: ${fadeInDown} 0.4s ease-in-out;\r\n  position: relative;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 1.4rem;\r\n  background-color: ${colors.darkBlue};\r\n  color: ${colors.white};\r\n  border: none;\r\n  border-top-left-radius: 1.2rem;\r\n  border-bottom-left-radius: 1.2rem;\r\n  &::placeholder {\r\n    color: ${colors.white};\r\n  }\r\n`;\r\n\r\nexport const SearchLabel = styled.label``;\r\n\r\nexport const IconBox = styled.button`\r\n  border: none;\r\n  padding: 1.35rem 1.6rem;\r\n  background-color: ${colors.mantis};\r\n  cursor: pointer;\r\n  border-top-right-radius: 1.2rem;\r\n  border-bottom-right-radius: 1.2rem;\r\n`;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  IconBox,\r\n  SearchForm,\r\n  SearchInput,\r\n} from \"./styled-componets/form-styles\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { RecipesContext } from \"../RecipesContext\";\r\n\r\nconst Form = () => {\r\n  // \"state\" of user's recipe input\r\n  const { recipesInput, recipeQuery } = useContext(RecipesContext);\r\n  const [recipeInput, setRecipeInput] = recipesInput;\r\n\r\n  const [query, setQuery] = recipeQuery; // recipe API query 'state'\r\n\r\n  const handleOnChange = (event) => {\r\n    setRecipeInput(event.target.value);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQuery(recipeInput);\r\n    setRecipeInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <SearchForm onSubmit={handleSubmit}>\r\n      <label htmlFor=\"search\"></label>\r\n      <SearchInput\r\n        type=\"text\"\r\n        id=\"search\"\r\n        value={recipeInput}\r\n        onChange={handleOnChange}\r\n        required\r\n        placeholder=\"Your Recipe...\"\r\n      />\r\n      <IconBox>\r\n        <FaSearch />\r\n      </IconBox>\r\n    </SearchForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  Ingredients,\r\n  Text,\r\n  Weight,\r\n} from \"./styled-componets/recipeIngredients-styles\";\r\n\r\nconst RecipeIngredients = ({ ingredients }) => {\r\n\r\n  return ingredients.map((ingredient) => {\r\n    return (\r\n      <Ingredients key={uuidv4()}>\r\n        <ul>\r\n          <Text>{ingredient.text}</Text>\r\n          <Weight>Weight - {ingredient.weight.toFixed(2)}</Weight>\r\n        </ul>\r\n      </Ingredients>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RecipeIngredients;\r\n","import React, { useContext, useState } from \"react\";\r\nimport RecipeIngredients from \"./RecipeIngredients\";\r\nimport {\r\n  IconContainer,\r\n  RecipeCard,\r\n  RecipeCardBtn,\r\n  RecipeFeatures,\r\n  RecipeImg,\r\n  RecipeTitle,\r\n  RecipeURL,\r\n} from \"./styled-componets/recipe-card-styles\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { RecipesContext } from \"../RecipesContext\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  // destructure recieved recipe data and then individual recipe object\r\n  const { recipe: recipeItem } = recipe;\r\n  const { label, image, url, ingredients } = recipeItem;\r\n\r\n  const { favorites, localStorage } = useContext(RecipesContext);\r\n  const [favoriteRecipe, setFavoriteRecipe] = favorites;\r\n  const [saveToLocalStorage] = localStorage;\r\n\r\n  //\"state\" of showing or hiding recipe ingredients on click\r\n  const [recipeDetails, setRecipeDetails] = useState(false);\r\n  const [btnText, setBtnText] = useState(false);\r\n  const [btnColor, setBtnColor] = useState(false);\r\n\r\n  // handle ingredients emergence, color and text of btn while it's clicking\r\n  const handleClick = () => {\r\n    setRecipeDetails(!recipeDetails);\r\n    setBtnText(!btnText);\r\n    setBtnColor(!btnColor);\r\n  };\r\n\r\n  // add favorite food recipe to a favorite component on click to a btn\r\n  const handleAddFavoriteClick = (recipe) => {\r\n    const newFavoriteList = [...favoriteRecipe, recipe];\r\n    setFavoriteRecipe(newFavoriteList);\r\n    saveToLocalStorage(newFavoriteList);\r\n  };\r\n\r\n  return (\r\n    <RecipeCard>\r\n      <RecipeTitle>{label}</RecipeTitle>\r\n      <RecipeImg src={image} alt={label} />\r\n      <RecipeFeatures>\r\n        <RecipeURL href={url} target=\"_blank\" rel=\"noopener\">\r\n          URL\r\n        </RecipeURL>\r\n        <IconContainer>\r\n          <FaHeart\r\n            onClick={() => handleAddFavoriteClick(recipe)}\r\n            color=\"#ff6347\"\r\n            fontSize=\"2.3rem\"\r\n          />\r\n        </IconContainer>\r\n      </RecipeFeatures>\r\n      <RecipeCardBtn\r\n        style={\r\n          btnColor\r\n            ? { backgroundColor: \"#ff6347\" }\r\n            : { backgroundColor: \"#7ac142\" }\r\n        }\r\n        onClick={handleClick}\r\n      >\r\n        {btnText ? \"Close Details\" : \"Ingredients\"}\r\n      </RecipeCardBtn>\r\n      {recipeDetails && <RecipeIngredients ingredients={ingredients} />}\r\n    </RecipeCard>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"./general-styles\";\r\n\r\nexport const PaginationBox = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Pagination = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const PaginationItem = styled.li`\r\n  padding: 1rem 1.3rem;\r\n  background-color: ${colors.darkBlue};\r\n  border: 2px solid ${colors.mantis};\r\n  margin-right: 1rem;\r\n  border-radius: 0.4rem;\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    background-color: ${colors.mantisDarker};\r\n  }\r\n\r\n  &.disabled {\r\n    opacity: 0.2;\r\n  }\r\n\r\n  &:hover:not(.active) {\r\n    background-color: ${colors.lighterBlue};\r\n  }\r\n`;\r\n\r\nexport const ActivePaginationItem = styled(PaginationItem)`\r\n  background-color: ${colors.mantisDarker};\r\n`;\r\n\r\nexport const PaginationLink = styled.a`\r\n  display: inline-block;\r\n  color: ${colors.white};\r\n  font-size: 1.7rem;\r\n  transition: all 0.3s ease-in-out;\r\n`;\r\n\r\nexport const PaginationBtn = styled(PaginationItem)`\r\n  color: ${colors.white};\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { RecipesContext } from \"../RecipesContext\";\r\nimport {\r\n  Pagination,\r\n  PaginationBox,\r\n  PaginationBtn,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"./styled-componets/pagination-styles\";\r\n\r\nconst Paginations = () => {\r\n  const { pagination, cardsLength, pageCurrent, recipesState } = useContext(\r\n    RecipesContext\r\n  );\r\n  const [paginate] = pagination;\r\n  const [recipeCardsTotalPages] = cardsLength;\r\n  const [current, setCurrentPage] = pageCurrent;\r\n  const [currentRecipeCard, setRecipes] = recipesState;\r\n\r\n  // \"state\" which keeps track on a current pagination btn\r\n  const [currentBtn, setCurentBtn] = useState(1); //first page by default\r\n\r\n  let pageNumbers = [];\r\n  for (let i = 1; i <= recipeCardsTotalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  \r\n  return (\r\n    <PaginationBox>\r\n      <Pagination>\r\n        {/* Show Prev and Next btns when there is any rendered recipe card */}\r\n        {currentRecipeCard.length > 0 ? (\r\n          <PaginationBtn\r\n            className={currentBtn === 1 ? \"disabled\" : \"\"}\r\n            onClick={() => {\r\n              setCurentBtn((prev) => (prev === 1 ? prev : prev - 1));\r\n              setCurrentPage(currentBtn);\r\n            }}\r\n          >\r\n            &lt;\r\n          </PaginationBtn>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {pageNumbers.map((number) => (\r\n          <PaginationItem\r\n            key={number}\r\n            className={currentBtn === number ? \"active\": \"\"}\r\n            onClick={() => {\r\n              paginate(number);\r\n              setCurentBtn(number);\r\n            }}\r\n          >\r\n            <PaginationLink>{number}</PaginationLink>\r\n          </PaginationItem>\r\n        ))}\r\n        {currentRecipeCard.length > 0 ? (\r\n          <PaginationBtn\r\n            className={\r\n              currentBtn === pageNumbers.length ? \"disabled\" : \"\"\r\n            }\r\n            onClick={() => {\r\n              setCurentBtn((prev) =>\r\n                prev === pageNumbers.length ? prev : prev + 1\r\n              );\r\n              setCurrentPage(currentBtn);\r\n            }}\r\n          >\r\n            &gt;\r\n          </PaginationBtn>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Pagination>\r\n    </PaginationBox>\r\n  );\r\n};\r\n\r\nexport default Paginations;\r\n","import React, { useContext } from \"react\";\r\nimport { RecipesContext } from \"../RecipesContext\";\r\nimport Form from \"./Form\";\r\nimport Recipe from \"./Recipe\";\r\nimport { Container } from \"./styled-componets/general-styles\";\r\nimport {\r\n  RecipeCardBody,\r\n  RecipesSection,\r\n  Spinner,\r\n  Title,\r\n} from \"./styled-componets/recipes-styles\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport RotateLoader from \"react-spinners/RotateLoader\";\r\nimport Paginations from \"./Pagination\";\r\nimport FindRecipeMessage from \"./FindRecipeMessage\";\r\n\r\nconst Recipes = () => {\r\n  // 'state' of recived recipe data from a server\r\n  const { recipesState } = useContext(RecipesContext);\r\n  const [currentRecipeCard, setRecipes] = recipesState;\r\n\r\n  // desctrucrure \"state\" of loading data from a server\r\n  const { recipeLoading } = useContext(RecipesContext);\r\n  const [loading, setLoading] = recipeLoading;\r\n\r\n  return (\r\n    <RecipesSection>\r\n      <Container>\r\n        <Title>Search your favorite Recipe</Title>\r\n        <Form />\r\n        {loading ? (\r\n          <Spinner>\r\n            <RotateLoader\r\n              color=\"green\"\r\n              loading={loading}\r\n              size={20}\r\n              margin={4}\r\n            />\r\n          </Spinner>\r\n        ) : (\r\n          <RecipeCardBody>\r\n            {currentRecipeCard.length > 0 ? (\r\n              currentRecipeCard.map((recipe) => (\r\n                <Recipe key={uuidv4()} recipe={recipe} />\r\n              ))\r\n            ) : (\r\n              <FindRecipeMessage title=\"Find Your Recipe...\" />\r\n            )}\r\n          </RecipeCardBody>\r\n        )}\r\n        {!loading && <Paginations />}{\" \"}\r\n        {/* show Paginations component when a data is loaded and card are rendered*/}\r\n      </Container>\r\n    </RecipesSection>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n"],"sourceRoot":""}